@model INCISE2018_MVC.Models.MyAbstractViewModel

@using INCISE2018_MVC.Models

@{
    ViewBag.Title = "MyAbstract";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script type="text/javascript">
    function ShowBtnPress(id) {
        var btn = document.getElementById(id);
        if (btn.innerText == '+') {
            btn.innerText = '-';
        } else {
            btn.innerText = '+';
        }
    }
</script>

<div class="container">
    <h2>My Abstracts</h2>
    <h5>Here is all the abstract you submitted.</h5>
    @if (!string.IsNullOrWhiteSpace(ViewBag.AlertType))
    {
        string str = ViewBag.AlertType;
        <div class="alert alert-@str.ToLower() alert-dismissable fade show">
            <button type="button" class="close" data-dismiss="alert">&times;</button>
            @ViewBag.AlertContent
        </div>
    }
    <hr />
    <table class="table table-bordered table-hover ">
        <thead class="table-secondary">
            <tr>
                <th></th>
                <th>Status</th>
                <th>Version</th>
                <th>Author</th>
                <th>Co-author(s)</th>
                <th>Abstract Title</th>
                <th>Abstract Body</th>
                <th>INCISE Theme</th>
                <th>Presentation Type</th>
                <th>Keywords</th>
                <th></th>
            </tr>
        </thead>
        <tbody class="table-striped">
            <tr>
                <td colspan="11">
                    @Html.ActionLink("+ New Abstract", "New", "Abstract", null, new { @class = "btn btn-link mx-auto w-100" })
                </td>
            </tr>
        </tbody>
        @foreach (AbstractModel key in Model.AbstractDictionary.Keys)
        {
            <tbody class="table-striped">
                <tr>
                    <td><button id="showBtn_@key.Id" type="button" class="btn btn-link text-secondary p-0" data-toggle="collapse" data-target="#collapse_@key.GroupId" onclick="ShowBtnPress(this.id)">+</button></td>
                    <td>@Html.Partial("_StatusBadge", key)</td>
                    <td>@key.GroupId-@key.Id</td>
                    <td>@key.Author</td>
                    <td>@key.CoAuthors</td>
                    <td>@key.AbstarctTitle</td>
                    <td><a href="javacript:void(0);" class="text-secondary" data-toggle="modal" data-target="#Modal_@key.Id">(Preview)</a></td>
                    <td>@key.INCISETheme</td>
                    <td>@key.PresentationType</td>
                    <td>@key.KeyWords</td>
                    <td>
                        @Html.ActionLink("View", "Detail", "Abstract", new { Id = key.Id }, new { @class = "text-secondary" }) |
                        @Html.ActionLink("Edit", "Edit", "Abstract", new { Id = key.Id }, new { @class = "text-secondary" })
                        @if (key.Statement != State.Saved && key.Statement != State.Fail && key.Statement != State.Withdraw)
                        {
                            @: | @Html.ActionLink("Withdraw", "Withdraw", "Abstract", new { Id = key.Id }, new { @class = "text-secondary" })
                        }
                        @if (key.Statement == State.Saved)
                        {
                            @: | @Html.ActionLink("Submit", "Submit", "Abstract", new { Id = key.Id }, new { @class = "text-secondary" })
                        }
                    </td>
                </tr>
            </tbody>
            <tbody class="table-striped collapse" id="collapse_@key.GroupId">
                @foreach (AbstractModel value in Model.AbstractDictionary[key])
                {
                    <tr>
                        <td></td>
                        <td>@Html.Partial("_StatusBadge", value)</td>
                        <td>@value.GroupId-@value.Id</td>
                        <td>@value.Author</td>
                        <td>@value.CoAuthors</td>
                        <td>@value.AbstarctTitle</td>
                        <td><a href="javacript:void(0);" class="text-secondary" data-toggle="modal" data-target="#Modal_@value.Id">(Preview)</a></td>
                        <td>@value.INCISETheme</td>
                        <td>@value.PresentationType</td>
                        <td>@value.KeyWords</td>
                        <td>
                            @Html.ActionLink("View", "Detail", "Abstract", new { Id = value.Id }, new { @class = "text-secondary" }) |
                            @Html.ActionLink("Edit", "Edit", "Abstract", new { Id = key.Id }, new { @class = "text-secondary" })
                            @if (value.Statement != State.Saved && value.Statement != State.Fail && value.Statement != State.Withdraw)
                            {
                                @: | @Html.ActionLink("Withdraw", "Withdraw", "Abstract", new { Id = value.Id }, new { @class = "text-secondary" })
                            }
                            @if (value.Statement == State.Saved)
                            {
                                @: | @Html.ActionLink("Submit", "Submit", "Abstract", new { Id = value.Id }, new { @class = "text-secondary" })
                            }
                        </td>
                    </tr>
                }
            </tbody>
        }
    </table>
    @{
        foreach (AbstractModel key in Model.AbstractDictionary.Keys)
        {
            <div class="modal fade" id="Modal_@key.Id">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h4 class="modal-title">Preview</h4>
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                        </div>
                        <div class="modal-body">
                            @key.AbstarctBody
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
            foreach (AbstractModel i in Model.AbstractDictionary[key])
            {
                <div class="modal fade" id="Modal_@i.Id">
                    <div class="modal-dialog modal-lg">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h4 class="modal-title">Preview</h4>
                                <button type="button" class="close" data-dismiss="modal">&times;</button>
                            </div>
                            <div class="modal-body">
                                @i.AbstarctBody
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
    }
</div>