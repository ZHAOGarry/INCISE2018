@model INCISE2018_MVC.Models.ConsoleViewModel

@using INCISE2018_MVC.Models
@using INCISE2018_MVC.Managers

@{
    ViewBag.Title = "Console";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <h2>Abstract Console</h2>
    <h5>You can manage all the abstracts here.</h5>
    @if (!string.IsNullOrWhiteSpace(ViewBag.AlertType))
    {
        string str = ViewBag.AlertType;
        <div class="alert alert-@str.ToLower() alert-dismissable fade show">
            <button type="button" class="close" data-dismiss="alert">&times;</button>
            @ViewBag.AlertContent
        </div>
    }
    <hr />
    <h3>Reviewing List</h3>
    <p class="text-danger">Only the latest version will be displayed when the user commits the changes several times.</p>
    <table class="table table-bordered table-hover">
        <thead class="table-secondary">
            <tr>
                <th>Status</th>
                <th>Version</th>
                <th>Author</th>
                <th>Co-author(s)</th>
                <th>Abstract Title</th>
                <th>Abstract Body</th>
                <th>INCISE Theme</th>
                <th>Presentation Type</th>
                <th>Keywords</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (AbstractModel item in Model.WaitList)
            {
                <tr>
                    <td>@Html.Partial("_StatusBadge", item)</td>
                    <td>@item.GroupId-@item.Id</td>
                    <td>
                        @item.Author
                        <p><a href="javascript:void(0);" data-toggle="modal" data-target="#waitSubmitte_@item.Id">(Submitter)</a></p>
                    </td>
                    <td>@item.CoAuthors</td>
                    <td>@item.AbstarctTitle</td>
                    <td><a href="javacript:void(0);" class="text-secondary" data-toggle="modal" data-target="#Modal_@item.Id">(Preview)</a></td>
                    <td>@item.INCISETheme</td>
                    <td>@item.PresentationType</td>
                    <td>@item.KeyWords</td>
                    <td>
                        @Html.ActionLink("View", "Detail", "Abstract", new { Id = item.Id }, new { @class = "text-secondary" }) |
                        @Html.ActionLink("Pass", "Pass", "Abstract", new { Id = item.Id, GroupId = item.GroupId }, new { @class = "text-success" }) |
                        @Html.ActionLink("Reject", "Reject", "Abstract", new { Id = item.Id, GroupId = item.GroupId }, new { @class = "text-danger" })
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <hr />
    <h3>Display List</h3>
    <table class="table table-bordered table-hover">
        <thead class="table-secondary">
            <tr>
                <th>Status</th>
                <th>Version</th>
                <th>Author</th>
                <th>Co-author(s)</th>
                <th>Abstract Title</th>
                <th>Abstract Body</th>
                <th>INCISE Theme</th>
                <th>Presentation Type</th>
                <th>Keywords</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (AbstractModel item in Model.ShowList)
            {
                <tr>
                    <td>@Html.Partial("_StatusBadge", item)</td>
                    <td>@item.GroupId-@item.Id</td>
                    <td>
                        @item.Author
                        <p><a href="javascript:void(0);" data-toggle="modal" data-target="#showSubmitte_@item.Id">(Submitter)</a></p>
                    </td>
                    <td>@item.CoAuthors</td>
                    <td>@item.AbstarctTitle</td>
                    <td><a href="javacript:void(0);" class="text-secondary" data-toggle="modal" data-target="#Modal_@item.Id">(Preview)</a></td>
                    <td>@item.INCISETheme</td>
                    <td>@item.PresentationType</td>
                    <td>@item.KeyWords</td>
                    <td>
                        @Html.ActionLink("View", "Detail", "Abstract", new { Id = item.Id }, new { @class = "text-secondary" }) |
                        @Html.ActionLink("Delete", "Delete", "Abstract", new { Id = item.Id, GroupId = item.GroupId }, new { @class = "text-danger" })
                    </td>
                </tr>
            }
        </tbody>
    </table>
    @{
        foreach (AbstractModel i in Model.WaitList)
        {
            <div class="modal fade" id="Modal_@i.Id">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h4 class="modal-title">Preview</h4>
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                        </div>
                        <div class="modal-body">
                            @i.AbstarctBody
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        }
        foreach (AbstractModel i in Model.ShowList)
        {
            <div class="modal fade" id="Modal_@i.Id">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h4 class="modal-title">Preview</h4>
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                        </div>
                        <div class="modal-body">
                            @i.AbstarctBody
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        }

        foreach (AbstractModel item in Model.WaitList)
        {
            <div class="modal fade" id="waitSubmitte_@item.Id">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h4 class="modal-title">Submitter Infomation</h4>
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                        </div>
                        <div class="modal-body">
                            @{
                                UserInfoManager UIM = new UserInfoManager();
                                UserInfoNode infoNode = UIM.GetUserInfoNode(item.Owner);
                                if (infoNode == null)
                                {
                                    <p>
                                        This user has not filled in the information
                                    </p>
                                    <p>
                                        <strong>Email : </strong>@item.Owner
                                    </p>
                                }
                                else
                                {
                                    <p>
                                        <strong>Email : </strong>@item.Owner
                                    </p>
                                    <p>
                                        <strong>Name : </strong>@infoNode.FirstName @infoNode.LastName
                                    </p>
                                    <p>
                                        <strong>Institution : </strong>@infoNode.Institution
                                    </p>
                                    <p>
                                        <strong>Address : </strong>@infoNode.Address
                                    </p>
                                    <p>
                                        <strong>Student Type : </strong>@infoNode.StudentType
                                    </p>
                                }
                            }
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        }

        foreach (AbstractModel item in Model.ShowList)
        {
            <div class="modal fade" id="showSubmitte_@item.Id">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h4 class="modal-title">Submitter Infomation</h4>
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                        </div>
                        <div class="modal-body">
                            @{
                                UserInfoManager UIM = new UserInfoManager();
                                UserInfoNode infoNode = UIM.GetUserInfoNode(item.Owner);
                                if (infoNode == null)
                                {
                                    <p>
                                        This user has not filled in the information
                                    </p>
                                    <p>
                                        <strong>Email : </strong>@item.Owner
                                    </p>
                                }
                                else
                                {
                                    <p>
                                        <strong>Email : </strong>@item.Owner
                                    </p>
                                    <p>
                                        <strong>Name : </strong>@infoNode.FirstName @infoNode.LastName
                                    </p>
                                    <p>
                                        <strong>Institution : </strong>@infoNode.Institution
                                    </p>
                                    <p>
                                        <strong>Address : </strong>@infoNode.Address
                                    </p>
                                    <p>
                                        <strong>Student Type : </strong>@infoNode.StudentType
                                    </p>
                                }
                            }
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
    <hr />
    @Html.ActionLink("Field Trip Result", "Result", "Registration")
</div>

